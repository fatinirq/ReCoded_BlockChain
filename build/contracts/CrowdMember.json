{
  "contractName": "CrowdMember",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "accountAddress",
          "type": "address"
        }
      ],
      "name": "LogEnrolled",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getEnrolledAddress",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_firstNameMember",
          "type": "string"
        },
        {
          "name": "_lastNameMember",
          "type": "string"
        },
        {
          "name": "_emailMember",
          "type": "string"
        }
      ],
      "name": "storeMember",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "enrolled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMember",
      "outputs": [
        {
          "components": [
            {
              "name": "firstName",
              "type": "string"
            },
            {
              "name": "lastName",
              "type": "string"
            },
            {
              "name": "email",
              "type": "string"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMemeberCount",
      "outputs": [
        {
          "name": "tempCount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getMember\",\"outputs\":[{\"components\":[{\"name\":\"firstName\",\"type\":\"string\"},{\"name\":\"lastName\",\"type\":\"string\"},{\"name\":\"email\",\"type\":\"string\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMemeberCount\",\"outputs\":[{\"name\":\"tempCount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_firstNameMember\",\"type\":\"string\"},{\"name\":\"_lastNameMember\",\"type\":\"string\"},{\"name\":\"_emailMember\",\"type\":\"string\"}],\"name\":\"storeMember\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"enrolled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getEnrolledAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"accountAddress\",\"type\":\"address\"}],\"name\":\"LogEnrolled\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"enrolled()\":{\"details\":\"Retrieving  member data in enrolled and members lookups.\",\"return\":\"Data of msg.sender .\"},\"getMember()\":{\"details\":\"Retrieving  member data from enrolled and members lookups.\",\"return\":\"Data of msg.sender .\"},\"getMemeberCount()\":{\"return\":\"tempCount The counted members of the contracts .\"},\"storeMember(string,string,string)\":{\"details\":\"Storing  member data in enrolled and members\",\"params\":{\"_emailMember\":\": email of the member \",\"_firstNameMember\":\": First Name of the member\",\"_lastNameMember\":\": Last name of the member\"},\"return\":\"a flag refered that the member enrolled succefflly.\"}},\"title\":\"Crowd Member  \"},\"userdoc\":{\"methods\":{\"enrolled()\":{\"notice\":\"This function called by  user interface to get info of specific member\"},\"getMember()\":{\"notice\":\"This function called by  user interface to get info of specific member\"},\"getMemeberCount()\":{\"notice\":\"This function called by  user interface to get info of specific member\"},\"storeMember(string,string,string)\":{\"notice\":\"This function called by frontend to pass the parameters and register new memebr\"}}}},\"settings\":{\"compilationTarget\":{\"/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdMember.sol\":\"CrowdMember\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdMember.sol\":{\"keccak256\":\"0x72064dde9f0602f77d717467130e6692792ff015c8aafbe731a7ab39766bf264\",\"urls\":[\"bzzr://4c10256335e6409f33a58688c5da767791e60c1a14252768e3d4f94177f1e09a\"]},\"/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdStructure.sol\":{\"keccak256\":\"0xc356240b3761a3b3547bd7caf05af3924573919311db7766763b9caa1587c540\",\"urls\":[\"bzzr://d6ac58b5d4a155600650dd3a3943cfd442ef38da1d49f0d8eb3b0d395f034dd6\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5030600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ab8806100616000396000f3fe60806040526004361061004a5760003560e01c80630274c0941461004f5780634ef93bac1461007a578063750cba0d146100a55780639a308dcc146100e2578063ed9187fc1461010d575b600080fd5b34801561005b57600080fd5b5061006461014a565b604051610071919061091a565b60405180910390f35b34801561008657600080fd5b5061008f6103e4565b60405161009c919061093c565b60405180910390f35b3480156100b157600080fd5b506100cc60048036036100c791908101906107b3565b6103f0565b6040516100d991906108ff565b60405180910390f35b3480156100ee57600080fd5b506100f76105b1565b60405161010491906108ff565b60405180910390f35b34801561011957600080fd5b50610134600480360361012f919081019061078a565b610605565b60405161014191906108ff565b60405180910390f35b61015261065b565b60011515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146101af57600080fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102925780601f1061026757610100808354040283529160200191610292565b820191906000526020600020905b81548152906001019060200180831161027557829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103345780601f1061030957610100808354040283529160200191610334565b820191906000526020600020905b81548152906001019060200180831161031757829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103d65780601f106103ab576101008083540402835291602001916103d6565b820191906000526020600020905b8154815290600101906020018083116103b957829003601f168201915b505050505081525050905090565b60008054905080905090565b60006103fa61065b565b84816000018190525083816020018190525082816040018190525080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061047192919061067c565b50602082015181600101908051906020019061048e92919061067c565b5060408201518160020190805190602001906104ab92919061067c565b509050506001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160008082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167f990c442e6adb818b8fa7db3cf1023decd07f7b66e5306928c7ed527d974192bb60405160405180910390a2600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169150509392505050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60405180606001604052806060815260200160608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106106bd57805160ff19168380011785556106eb565b828001600101855582156106eb579182015b828111156106ea5782518255916020019190600101906106cf565b5b5090506106f891906106fc565b5090565b61071e91905b8082111561071a576000816000905550600101610702565b5090565b90565b60008135905061073081610a67565b92915050565b600082601f83011261074757600080fd5b813561075a61075582610984565b610957565b9150808252602083016020830185838301111561077657600080fd5b610781838284610a14565b50505092915050565b60006020828403121561079c57600080fd5b60006107aa84828501610721565b91505092915050565b6000806000606084860312156107c857600080fd5b600084013567ffffffffffffffff8111156107e257600080fd5b6107ee86828701610736565b935050602084013567ffffffffffffffff81111561080b57600080fd5b61081786828701610736565b925050604084013567ffffffffffffffff81111561083457600080fd5b61084086828701610736565b9150509250925092565b610853816109de565b82525050565b6000610864826109b0565b61086e81856109bb565b935061087e818560208601610a23565b61088781610a56565b840191505092915050565b600060608301600083015184820360008601526108af8282610859565b915050602083015184820360208601526108c98282610859565b915050604083015184820360408601526108e38282610859565b9150508091505092915050565b6108f981610a0a565b82525050565b6000602082019050610914600083018461084a565b92915050565b600060208201905081810360008301526109348184610892565b905092915050565b600060208201905061095160008301846108f0565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561097a57600080fd5b8060405250919050565b600067ffffffffffffffff82111561099b57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006109d7826109ea565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610a41578082015181840152602081019050610a26565b83811115610a50576000848401525b50505050565b6000601f19601f8301169050919050565b610a70816109cc565b8114610a7b57600080fd5b5056fea265627a7a723058206d6285e3d5ac7d2d5cb119bee40e32b04764b34de609f706b07433463efed3fd6c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x60806040526004361061004a5760003560e01c80630274c0941461004f5780634ef93bac1461007a578063750cba0d146100a55780639a308dcc146100e2578063ed9187fc1461010d575b600080fd5b34801561005b57600080fd5b5061006461014a565b604051610071919061091a565b60405180910390f35b34801561008657600080fd5b5061008f6103e4565b60405161009c919061093c565b60405180910390f35b3480156100b157600080fd5b506100cc60048036036100c791908101906107b3565b6103f0565b6040516100d991906108ff565b60405180910390f35b3480156100ee57600080fd5b506100f76105b1565b60405161010491906108ff565b60405180910390f35b34801561011957600080fd5b50610134600480360361012f919081019061078a565b610605565b60405161014191906108ff565b60405180910390f35b61015261065b565b60011515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146101af57600080fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102925780601f1061026757610100808354040283529160200191610292565b820191906000526020600020905b81548152906001019060200180831161027557829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103345780601f1061030957610100808354040283529160200191610334565b820191906000526020600020905b81548152906001019060200180831161031757829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103d65780601f106103ab576101008083540402835291602001916103d6565b820191906000526020600020905b8154815290600101906020018083116103b957829003601f168201915b505050505081525050905090565b60008054905080905090565b60006103fa61065b565b84816000018190525083816020018190525082816040018190525080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061047192919061067c565b50602082015181600101908051906020019061048e92919061067c565b5060408201518160020190805190602001906104ab92919061067c565b509050506001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160008082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167f990c442e6adb818b8fa7db3cf1023decd07f7b66e5306928c7ed527d974192bb60405160405180910390a2600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169150509392505050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60405180606001604052806060815260200160608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106106bd57805160ff19168380011785556106eb565b828001600101855582156106eb579182015b828111156106ea5782518255916020019190600101906106cf565b5b5090506106f891906106fc565b5090565b61071e91905b8082111561071a576000816000905550600101610702565b5090565b90565b60008135905061073081610a67565b92915050565b600082601f83011261074757600080fd5b813561075a61075582610984565b610957565b9150808252602083016020830185838301111561077657600080fd5b610781838284610a14565b50505092915050565b60006020828403121561079c57600080fd5b60006107aa84828501610721565b91505092915050565b6000806000606084860312156107c857600080fd5b600084013567ffffffffffffffff8111156107e257600080fd5b6107ee86828701610736565b935050602084013567ffffffffffffffff81111561080b57600080fd5b61081786828701610736565b925050604084013567ffffffffffffffff81111561083457600080fd5b61084086828701610736565b9150509250925092565b610853816109de565b82525050565b6000610864826109b0565b61086e81856109bb565b935061087e818560208601610a23565b61088781610a56565b840191505092915050565b600060608301600083015184820360008601526108af8282610859565b915050602083015184820360208601526108c98282610859565b915050604083015184820360408601526108e38282610859565b9150508091505092915050565b6108f981610a0a565b82525050565b6000602082019050610914600083018461084a565b92915050565b600060208201905081810360008301526109348184610892565b905092915050565b600060208201905061095160008301846108f0565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561097a57600080fd5b8060405250919050565b600067ffffffffffffffff82111561099b57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006109d7826109ea565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610a41578082015181840152602081019050610a26565b83811115610a50576000848401525b50505050565b6000601f19601f8301169050919050565b610a70816109cc565b8114610a7b57600080fd5b5056fea265627a7a723058206d6285e3d5ac7d2d5cb119bee40e32b04764b34de609f706b07433463efed3fd6c6578706572696d656e74616cf50037",
  "sourceMap": "377:3110:0:-;;;401:51;8:9:-1;5:2;;;30:1;27;20:12;5:2;401:51:0;443:4;426:8;;:22;;;;;;;;;;;;;;;;;;377:3110;;;;;;",
  "deployedSourceMap": "377:3110:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3469:8;;;2720:131;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2720:131:0;;;:::i;:::-;;;;;;;;;;;;;;;;3009:119;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3009:119:0;;;:::i;:::-;;;;;;;;;;;;;;;;1733:507;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1733:507:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2432:93;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2432:93:0;;;:::i;:::-;;;;;;;;;;;;;;;;1227:119;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1227:119:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2720:131;2776:32;;:::i;:::-;1120:4;1091:33;;:15;:27;1107:10;1091:27;;;;;;;;;;;;;;;;;;;;;;;;;:33;;;1082:43;;;;;;2826:7;:19;2834:10;2826:19;;;;;;;;;;;;;;;2818:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2720:131;:::o;3009:119::-;3057:14;3090:12;;3080:22;;3115:9;3108:16;;3009:119;:::o;1733:507::-;1859:4;1871:40;;:::i;:::-;1933:16;1915:7;:17;;:34;;;;1971:15;1953:7;:16;;:33;;;;2004:12;1990:7;:13;;:26;;;;2046:7;2026;:19;2034:10;2026:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2086:4;2058:15;:27;2074:10;2058:27;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;2108:1;2094:12;;:15;;;;;;;;;;;2130:10;2118:23;;;;;;;;;;;;2151:15;:27;2167:10;2151:27;;;;;;;;;;;;;;;;;;;;;;;;;2144:34;;;1733:507;;;;;:::o;2432:93::-;2476:4;2493:15;:27;2509:10;2493:27;;;;;;;;;;;;;;;;;;;;;;;;;2485:36;;2432:93;:::o;1227:119::-;1293:4;1314:15;:25;1330:8;1314:25;;;;;;;;;;;;;;;;;;;;;;;;;1307:32;;1227:119;;;:::o;377:3110::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;143:442;;245:3;238:4;230:6;226:17;222:27;212:2;;263:1;260;253:12;212:2;300:6;287:20;322:65;337:49;379:6;337:49;;;322:65;;;313:74;;407:6;400:5;393:21;443:4;435:6;431:17;476:4;469:5;465:16;511:3;502:6;497:3;493:16;490:25;487:2;;;528:1;525;518:12;487:2;538:41;572:6;567:3;562;538:41;;;205:380;;;;;;;;593:241;;697:2;685:9;676:7;672:23;668:32;665:2;;;713:1;710;703:12;665:2;748:1;765:53;810:7;801:6;790:9;786:22;765:53;;;755:63;;727:97;659:175;;;;;841:809;;;;1009:2;997:9;988:7;984:23;980:32;977:2;;;1025:1;1022;1015:12;977:2;1088:1;1077:9;1073:17;1060:31;1111:18;1103:6;1100:30;1097:2;;;1143:1;1140;1133:12;1097:2;1163:63;1218:7;1209:6;1198:9;1194:22;1163:63;;;1153:73;;1039:193;1291:2;1280:9;1276:18;1263:32;1315:18;1307:6;1304:30;1301:2;;;1347:1;1344;1337:12;1301:2;1367:63;1422:7;1413:6;1402:9;1398:22;1367:63;;;1357:73;;1242:194;1495:2;1484:9;1480:18;1467:32;1519:18;1511:6;1508:30;1505:2;;;1551:1;1548;1541:12;1505:2;1571:63;1626:7;1617:6;1606:9;1602:22;1571:63;;;1561:73;;1446:194;971:679;;;;;;1657:104;1734:21;1749:5;1734:21;;;1729:3;1722:34;1716:45;;;1768:319;;1866:35;1895:5;1866:35;;;1913:61;1967:6;1962:3;1913:61;;;1906:68;;1979:52;2024:6;2019:3;2012:4;2005:5;2001:16;1979:52;;;2052:29;2074:6;2052:29;;;2047:3;2043:39;2036:46;;1846:241;;;;;;2169:877;;2324:4;2319:3;2315:14;2412:3;2405:5;2401:15;2395:22;2462:3;2456:4;2452:14;2446:3;2441;2437:13;2430:37;2482:69;2546:4;2532:12;2482:69;;;2474:77;;2344:219;2640:4;2633:5;2629:16;2623:23;2692:3;2686:4;2682:14;2675:4;2670:3;2666:14;2659:38;2712:69;2776:4;2762:12;2712:69;;;2704:77;;2573:220;2867:4;2860:5;2856:16;2850:23;2919:3;2913:4;2909:14;2902:4;2897:3;2893:14;2886:38;2939:69;3003:4;2989:12;2939:69;;;2931:77;;2803:217;3037:4;3030:11;;2297:749;;;;;;3053:113;3136:24;3154:5;3136:24;;;3131:3;3124:37;3118:48;;;3173:201;;3285:2;3274:9;3270:18;3262:26;;3299:65;3361:1;3350:9;3346:17;3337:6;3299:65;;;3256:118;;;;;3381:369;;3553:2;3542:9;3538:18;3530:26;;3603:9;3597:4;3593:20;3589:1;3578:9;3574:17;3567:47;3628:112;3735:4;3726:6;3628:112;;;3620:120;;3524:226;;;;;3757:213;;3875:2;3864:9;3860:18;3852:26;;3889:71;3957:1;3946:9;3942:17;3933:6;3889:71;;;3846:124;;;;;3977:256;;4039:2;4033:9;4023:19;;4077:4;4069:6;4065:17;4176:6;4164:10;4161:22;4140:18;4128:10;4125:34;4122:62;4119:2;;;4197:1;4194;4187:12;4119:2;4217:10;4213:2;4206:22;4017:216;;;;;4240:259;;4384:18;4376:6;4373:30;4370:2;;;4416:1;4413;4406:12;4370:2;4460:4;4456:9;4449:4;4441:6;4437:17;4433:33;4425:41;;4489:4;4483;4479:15;4471:23;;4307:192;;;;4506:88;;4583:5;4577:12;4567:22;;4561:33;;;;4602:153;;4707:6;4702:3;4695:19;4744:4;4739:3;4735:14;4720:29;;4688:67;;;;;4763:91;;4825:24;4843:5;4825:24;;;4814:35;;4808:46;;;;4861:85;;4934:5;4927:13;4920:21;4909:32;;4903:43;;;;4953:121;;5026:42;5019:5;5015:54;5004:65;;4998:76;;;;5081:72;;5143:5;5132:16;;5126:27;;;;5161:145;5242:6;5237:3;5232;5219:30;5298:1;5289:6;5284:3;5280:16;5273:27;5212:94;;;;5315:268;5380:1;5387:101;5401:6;5398:1;5395:13;5387:101;;;5477:1;5472:3;5468:11;5462:18;5458:1;5453:3;5449:11;5442:39;5423:2;5420:1;5416:10;5411:15;;5387:101;;;5503:6;5500:1;5497:13;5494:2;;;5568:1;5559:6;5554:3;5550:16;5543:27;5494:2;5364:219;;;;;5591:97;;5679:2;5675:7;5670:2;5663:5;5659:14;5655:28;5645:38;;5639:49;;;;5696:117;5765:24;5783:5;5765:24;;;5758:5;5755:35;5745:2;;5804:1;5801;5794:12;5745:2;5739:74;",
  "source": "pragma solidity >=0.5.0 <0.6.0;\n/// @title A simulator for crowd sourcing and funding members and projects\n/// @author Fatin Alkinani\n/// @notice You can use this contract for only the most basic simulation\n/// @dev All function calls are currently implemented without side effects\npragma experimental ABIEncoderV2;\nimport \"./CrowdStructure.sol\";\n\n/** @title Crowd Member  */\n contract CrowdMember\n {\nconstructor()public\n{\n\n  deployed=address(this);\n\n}\n\n//State variables\n\nuint  membersCount ;//setting a counter of al members\n//bytes32 public txID ;\nuint   indexProjects;//unused, palnned for the next step\n\naddress private deployed ;\n////Lockups\n///_____\n// mapping address to CrowdMember\nmapping (address=>CrowdStructure.MemberData) private members;\n//Marking members  after success registeration\nmapping (address=>bool) private enrolledMembers;\n\nmapping (address=>CrowdStructure.Project)private projects ;///planned for the next step\n\n/////Lockup between member adress and his projects\nmapping (address=>address) private ownerToProjects;\n\n///Modifiers\nmodifier isEnrolled()\n{\n  require (enrolledMembers[msg.sender]==true);\n  _;\n}\n////*events*///\nevent LogEnrolled(address indexed accountAddress);\n\n//functions\n//_________\n function getEnrolledAddress(address _address) view public returns(bool)\n  {\n    return enrolledMembers[_address];\n    }\n\n  /** @notice This function called by frontend to pass the parameters and register new memebr\n    * @dev Storing  member data in enrolled and members\n    * @param _firstNameMember : First Name of the member\n    * @param _lastNameMember : Last name of the member\n    * @param _emailMember : email of the member \n    * @return a flag refered that the member enrolled succefflly.\n    */\n\nfunction storeMember(string memory _firstNameMember,string memory _lastNameMember, string memory _emailMember)\npublic\nreturns(bool)\n{\n\n\n  CrowdStructure.MemberData memory _member;\n  _member.firstName=_firstNameMember;\n  _member.lastName= _lastNameMember;\n  _member.email=_emailMember;\n////\n\n  members[msg.sender]=_member;\n\n  enrolledMembers[msg.sender]=true;\n  membersCount+=1;\n  emit LogEnrolled(msg.sender);\n\nreturn enrolledMembers[msg.sender];\n\n//  txID=keccak256(abi.encodePacked(index2,msg.sender));\n\n}\n/** @notice This function called by  user interface to get info of specific member\n  * @dev Retrieving  member data in enrolled and members lookups.\n\n  * @return Data of msg.sender .\n  */\n\n\n function  enrolled()  public view returns  (bool)\n {\nreturn (enrolledMembers[msg.sender]);\n }\n/** @notice This function called by  user interface to get info of specific member\n  * @dev Retrieving  member data from enrolled and members lookups.\n\n  * @return Data of msg.sender .\n  */\n\n\n  function  getMember()  public view isEnrolled returns  (CrowdStructure.MemberData memory )\n {\n\n   return (members[msg.sender]);\n\n }\n\n\n\n /** @notice This function called by  user interface to get info of specific member\n   * @return tempCount The counted members of the contracts .\n   */\n\n function getMemeberCount() public view returns (uint tempCount)\n {\n    tempCount=membersCount;\n    return tempCount;\n }\n\n\n\n // Fallback function - Called if other functions don't match call or\n    // sent ether without data\n    // Typically, called when invalid data is sent\n    // Added so ether sent to this contract is reverted if the contract fails\n    // otherwise, the sender's money is transferred to contract\n    function () external payable {\n        revert();\n    }\n\n}\n",
  "sourcePath": "/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdMember.sol",
  "ast": {
    "absolutePath": "/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdMember.sol",
    "exportedSymbols": {
      "CrowdMember": [
        173
      ]
    },
    "id": 174,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "282:33:0"
      },
      {
        "absolutePath": "/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdStructure.sol",
        "file": "./CrowdStructure.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 174,
        "sourceUnit": 581,
        "src": "316:30:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Crowd Member  ",
        "fullyImplemented": true,
        "id": 173,
        "linearizedBaseContracts": [
          173
        ],
        "name": "CrowdMember",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 12,
              "nodeType": "Block",
              "src": "421:31:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6,
                      "name": "deployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "426:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 8,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1000,
                          "src": "443:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CrowdMember_$173",
                            "typeString": "contract CrowdMember"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CrowdMember_$173",
                            "typeString": "contract CrowdMember"
                          }
                        ],
                        "id": 7,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "435:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 9,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "435:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "426:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11,
                  "nodeType": "ExpressionStatement",
                  "src": "426:22:0"
                }
              ]
            },
            "documentation": null,
            "id": 13,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "412:2:0"
            },
            "returnParameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "421:0:0"
            },
            "scope": 173,
            "src": "401:51:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 15,
            "name": "membersCount",
            "nodeType": "VariableDeclaration",
            "scope": 173,
            "src": "473:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "473:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 17,
            "name": "indexProjects",
            "nodeType": "VariableDeclaration",
            "scope": 173,
            "src": "551:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "551:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 19,
            "name": "deployed",
            "nodeType": "VariableDeclaration",
            "scope": 173,
            "src": "609:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 18,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "609:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 23,
            "name": "members",
            "nodeType": "VariableDeclaration",
            "scope": 173,
            "src": "691:60:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MemberData_$557_storage_$",
              "typeString": "mapping(address => struct CrowdStructure.MemberData)"
            },
            "typeName": {
              "id": 22,
              "keyType": {
                "id": 20,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "700:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "691:44:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MemberData_$557_storage_$",
                "typeString": "mapping(address => struct CrowdStructure.MemberData)"
              },
              "valueType": {
                "contractScope": null,
                "id": 21,
                "name": "CrowdStructure.MemberData",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 557,
                "src": "709:25:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_MemberData_$557_storage_ptr",
                  "typeString": "struct CrowdStructure.MemberData"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 27,
            "name": "enrolledMembers",
            "nodeType": "VariableDeclaration",
            "scope": 173,
            "src": "800:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 26,
              "keyType": {
                "id": 24,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "809:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "800:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 25,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "818:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 31,
            "name": "projects",
            "nodeType": "VariableDeclaration",
            "scope": 173,
            "src": "850:57:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$579_storage_$",
              "typeString": "mapping(address => struct CrowdStructure.Project)"
            },
            "typeName": {
              "id": 30,
              "keyType": {
                "id": 28,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "859:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "850:41:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$579_storage_$",
                "typeString": "mapping(address => struct CrowdStructure.Project)"
              },
              "valueType": {
                "contractScope": null,
                "id": 29,
                "name": "CrowdStructure.Project",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 579,
                "src": "868:22:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Project_$579_storage_ptr",
                  "typeString": "struct CrowdStructure.Project"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 35,
            "name": "ownerToProjects",
            "nodeType": "VariableDeclaration",
            "scope": 173,
            "src": "990:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 34,
              "keyType": {
                "id": 32,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "999:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "990:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 33,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1008:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "1078:55:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 38,
                            "name": "enrolledMembers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1091:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 41,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 39,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 984,
                              "src": "1107:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 40,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1107:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1091:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1120:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1091:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 37,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        987,
                        988
                      ],
                      "referencedDeclaration": 987,
                      "src": "1082:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1082:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "1082:43:0"
                },
                {
                  "id": 46,
                  "nodeType": "PlaceholderStatement",
                  "src": "1129:1:0"
                }
              ]
            },
            "documentation": "Modifiers",
            "id": 48,
            "name": "isEnrolled",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1075:2:0"
            },
            "src": "1056:77:0",
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "/*events*///",
            "id": 52,
            "name": "LogEnrolled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "indexed": true,
                  "name": "accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "1168:30:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1168:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1167:32:0"
            },
            "src": "1150:50:0"
          },
          {
            "body": {
              "id": 63,
              "nodeType": "Block",
              "src": "1301:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 59,
                      "name": "enrolledMembers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1314:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 61,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 60,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "1330:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1314:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 58,
                  "id": 62,
                  "nodeType": "Return",
                  "src": "1307:32:0"
                }
              ]
            },
            "documentation": null,
            "id": 64,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEnrolledAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "1255:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1255:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1254:18:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "1293:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1292:6:0"
            },
            "scope": 173,
            "src": "1227:119:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "1865:375:0",
              "statements": [
                {
                  "assignments": [
                    78
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78,
                      "name": "_member",
                      "nodeType": "VariableDeclaration",
                      "scope": 126,
                      "src": "1871:40:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MemberData_$557_memory_ptr",
                        "typeString": "struct CrowdStructure.MemberData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 77,
                        "name": "CrowdStructure.MemberData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 557,
                        "src": "1871:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MemberData_$557_storage_ptr",
                          "typeString": "struct CrowdStructure.MemberData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 79,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1871:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 80,
                        "name": "_member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "1915:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MemberData_$557_memory_ptr",
                          "typeString": "struct CrowdStructure.MemberData memory"
                        }
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "firstName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 552,
                      "src": "1915:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 83,
                      "name": "_firstNameMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "1933:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1915:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1915:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "_member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "1953:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MemberData_$557_memory_ptr",
                          "typeString": "struct CrowdStructure.MemberData memory"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 554,
                      "src": "1953:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 89,
                      "name": "_lastNameMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "1971:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1953:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1953:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 92,
                        "name": "_member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "1990:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MemberData_$557_memory_ptr",
                          "typeString": "struct CrowdStructure.MemberData memory"
                        }
                      },
                      "id": 94,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "email",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 556,
                      "src": "1990:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 95,
                      "name": "_emailMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "2004:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1990:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1990:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 98,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "2026:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MemberData_$557_storage_$",
                          "typeString": "mapping(address => struct CrowdStructure.MemberData storage ref)"
                        }
                      },
                      "id": 101,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 99,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 984,
                          "src": "2034:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2034:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2026:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MemberData_$557_storage",
                        "typeString": "struct CrowdStructure.MemberData storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 102,
                      "name": "_member",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "2046:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MemberData_$557_memory_ptr",
                        "typeString": "struct CrowdStructure.MemberData memory"
                      }
                    },
                    "src": "2026:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MemberData_$557_storage",
                      "typeString": "struct CrowdStructure.MemberData storage ref"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "2026:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 105,
                        "name": "enrolledMembers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "2058:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 108,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 106,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 984,
                          "src": "2074:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2074:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2058:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2086:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2058:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "2058:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 112,
                      "name": "membersCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "2094:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2108:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2094:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "2094:15:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 117,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 984,
                          "src": "2130:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2130:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 116,
                      "name": "LogEnrolled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "2118:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2118:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "EmitStatement",
                  "src": "2113:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 121,
                      "name": "enrolledMembers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "2151:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 124,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 122,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "2167:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2167:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2151:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74,
                  "id": 125,
                  "nodeType": "Return",
                  "src": "2144:34:0"
                }
              ]
            },
            "documentation": "@notice This function called by frontend to pass the parameters and register new memebr\n@dev Storing  member data in enrolled and members\n@param _firstNameMember : First Name of the member\n@param _lastNameMember : Last name of the member\n@param _emailMember : email of the member \n@return a flag refered that the member enrolled succefflly.",
            "id": 127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "storeMember",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "name": "_firstNameMember",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1754:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1754:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "name": "_lastNameMember",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1785:29:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1785:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70,
                  "name": "_emailMember",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1816:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1816:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1753:90:0"
            },
            "returnParameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1859:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1859:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1858:6:0"
            },
            "scope": 173,
            "src": "1733:507:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 138,
              "nodeType": "Block",
              "src": "2483:42:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 132,
                          "name": "enrolledMembers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "2493:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 135,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 133,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 984,
                            "src": "2509:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2509:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2493:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 136,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2492:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 131,
                  "id": 137,
                  "nodeType": "Return",
                  "src": "2485:36:0"
                }
              ]
            },
            "documentation": "@notice This function called by  user interface to get info of specific member\n@dev Retrieving  member data in enrolled and members lookups.\n@return Data of msg.sender .",
            "id": 139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enrolled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2450:2:0"
            },
            "returnParameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "2476:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2476:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2475:6:0"
            },
            "scope": 173,
            "src": "2432:93:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 152,
              "nodeType": "Block",
              "src": "2812:39:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 146,
                          "name": "members",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "2826:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MemberData_$557_storage_$",
                            "typeString": "mapping(address => struct CrowdStructure.MemberData storage ref)"
                          }
                        },
                        "id": 149,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 147,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 984,
                            "src": "2834:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2834:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2826:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MemberData_$557_storage",
                          "typeString": "struct CrowdStructure.MemberData storage ref"
                        }
                      }
                    ],
                    "id": 150,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2825:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MemberData_$557_storage",
                      "typeString": "struct CrowdStructure.MemberData storage ref"
                    }
                  },
                  "functionReturnParameters": 145,
                  "id": 151,
                  "nodeType": "Return",
                  "src": "2818:28:0"
                }
              ]
            },
            "documentation": "@notice This function called by  user interface to get info of specific member\n@dev Retrieving  member data from enrolled and members lookups.\n@return Data of msg.sender .",
            "id": 153,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 142,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 141,
                  "name": "isEnrolled",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 48,
                  "src": "2755:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2755:10:0"
              }
            ],
            "name": "getMember",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2739:2:0"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "2776:32:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MemberData_$557_memory_ptr",
                    "typeString": "struct CrowdStructure.MemberData"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 143,
                    "name": "CrowdStructure.MemberData",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 557,
                    "src": "2776:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MemberData_$557_storage_ptr",
                      "typeString": "struct CrowdStructure.MemberData"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2775:35:0"
            },
            "scope": 173,
            "src": "2720:131:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 164,
              "nodeType": "Block",
              "src": "3074:54:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 158,
                      "name": "tempCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "3080:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 159,
                      "name": "membersCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "3090:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3080:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "3080:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 162,
                    "name": "tempCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 156,
                    "src": "3115:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 157,
                  "id": 163,
                  "nodeType": "Return",
                  "src": "3108:16:0"
                }
              ]
            },
            "documentation": "@notice This function called by  user interface to get info of specific member\n@return tempCount The counted members of the contracts .",
            "id": 165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMemeberCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3033:2:0"
            },
            "returnParameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 156,
                  "name": "tempCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "3057:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3057:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3056:16:0"
            },
            "scope": 173,
            "src": "3009:119:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 171,
              "nodeType": "Block",
              "src": "3459:25:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 168,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        989,
                        990
                      ],
                      "referencedDeclaration": 989,
                      "src": "3469:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3469:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "3469:8:0"
                }
              ]
            },
            "documentation": null,
            "id": 172,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3439:2:0"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3459:0:0"
            },
            "scope": 173,
            "src": "3430:54:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 174,
        "src": "377:3110:0"
      }
    ],
    "src": "0:3488:0"
  },
  "legacyAST": {
    "absolutePath": "/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdMember.sol",
    "exportedSymbols": {
      "CrowdMember": [
        173
      ]
    },
    "id": 174,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "282:33:0"
      },
      {
        "absolutePath": "/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdStructure.sol",
        "file": "./CrowdStructure.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 174,
        "sourceUnit": 581,
        "src": "316:30:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Crowd Member  ",
        "fullyImplemented": true,
        "id": 173,
        "linearizedBaseContracts": [
          173
        ],
        "name": "CrowdMember",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 12,
              "nodeType": "Block",
              "src": "421:31:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6,
                      "name": "deployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "426:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 8,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1000,
                          "src": "443:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CrowdMember_$173",
                            "typeString": "contract CrowdMember"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CrowdMember_$173",
                            "typeString": "contract CrowdMember"
                          }
                        ],
                        "id": 7,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "435:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 9,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "435:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "426:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11,
                  "nodeType": "ExpressionStatement",
                  "src": "426:22:0"
                }
              ]
            },
            "documentation": null,
            "id": 13,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "412:2:0"
            },
            "returnParameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "421:0:0"
            },
            "scope": 173,
            "src": "401:51:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 15,
            "name": "membersCount",
            "nodeType": "VariableDeclaration",
            "scope": 173,
            "src": "473:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "473:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 17,
            "name": "indexProjects",
            "nodeType": "VariableDeclaration",
            "scope": 173,
            "src": "551:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "551:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 19,
            "name": "deployed",
            "nodeType": "VariableDeclaration",
            "scope": 173,
            "src": "609:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 18,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "609:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 23,
            "name": "members",
            "nodeType": "VariableDeclaration",
            "scope": 173,
            "src": "691:60:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MemberData_$557_storage_$",
              "typeString": "mapping(address => struct CrowdStructure.MemberData)"
            },
            "typeName": {
              "id": 22,
              "keyType": {
                "id": 20,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "700:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "691:44:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MemberData_$557_storage_$",
                "typeString": "mapping(address => struct CrowdStructure.MemberData)"
              },
              "valueType": {
                "contractScope": null,
                "id": 21,
                "name": "CrowdStructure.MemberData",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 557,
                "src": "709:25:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_MemberData_$557_storage_ptr",
                  "typeString": "struct CrowdStructure.MemberData"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 27,
            "name": "enrolledMembers",
            "nodeType": "VariableDeclaration",
            "scope": 173,
            "src": "800:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 26,
              "keyType": {
                "id": 24,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "809:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "800:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 25,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "818:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 31,
            "name": "projects",
            "nodeType": "VariableDeclaration",
            "scope": 173,
            "src": "850:57:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$579_storage_$",
              "typeString": "mapping(address => struct CrowdStructure.Project)"
            },
            "typeName": {
              "id": 30,
              "keyType": {
                "id": 28,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "859:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "850:41:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$579_storage_$",
                "typeString": "mapping(address => struct CrowdStructure.Project)"
              },
              "valueType": {
                "contractScope": null,
                "id": 29,
                "name": "CrowdStructure.Project",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 579,
                "src": "868:22:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Project_$579_storage_ptr",
                  "typeString": "struct CrowdStructure.Project"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 35,
            "name": "ownerToProjects",
            "nodeType": "VariableDeclaration",
            "scope": 173,
            "src": "990:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 34,
              "keyType": {
                "id": 32,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "999:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "990:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 33,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1008:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "1078:55:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 38,
                            "name": "enrolledMembers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1091:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 41,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 39,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 984,
                              "src": "1107:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 40,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1107:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1091:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1120:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1091:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 37,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        987,
                        988
                      ],
                      "referencedDeclaration": 987,
                      "src": "1082:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1082:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "1082:43:0"
                },
                {
                  "id": 46,
                  "nodeType": "PlaceholderStatement",
                  "src": "1129:1:0"
                }
              ]
            },
            "documentation": "Modifiers",
            "id": 48,
            "name": "isEnrolled",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1075:2:0"
            },
            "src": "1056:77:0",
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "/*events*///",
            "id": 52,
            "name": "LogEnrolled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "indexed": true,
                  "name": "accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "1168:30:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1168:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1167:32:0"
            },
            "src": "1150:50:0"
          },
          {
            "body": {
              "id": 63,
              "nodeType": "Block",
              "src": "1301:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 59,
                      "name": "enrolledMembers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1314:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 61,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 60,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "1330:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1314:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 58,
                  "id": 62,
                  "nodeType": "Return",
                  "src": "1307:32:0"
                }
              ]
            },
            "documentation": null,
            "id": 64,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEnrolledAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "1255:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1255:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1254:18:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "1293:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1292:6:0"
            },
            "scope": 173,
            "src": "1227:119:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "1865:375:0",
              "statements": [
                {
                  "assignments": [
                    78
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78,
                      "name": "_member",
                      "nodeType": "VariableDeclaration",
                      "scope": 126,
                      "src": "1871:40:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MemberData_$557_memory_ptr",
                        "typeString": "struct CrowdStructure.MemberData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 77,
                        "name": "CrowdStructure.MemberData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 557,
                        "src": "1871:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MemberData_$557_storage_ptr",
                          "typeString": "struct CrowdStructure.MemberData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 79,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1871:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 80,
                        "name": "_member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "1915:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MemberData_$557_memory_ptr",
                          "typeString": "struct CrowdStructure.MemberData memory"
                        }
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "firstName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 552,
                      "src": "1915:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 83,
                      "name": "_firstNameMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "1933:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1915:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1915:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "_member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "1953:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MemberData_$557_memory_ptr",
                          "typeString": "struct CrowdStructure.MemberData memory"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 554,
                      "src": "1953:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 89,
                      "name": "_lastNameMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "1971:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1953:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1953:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 92,
                        "name": "_member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "1990:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MemberData_$557_memory_ptr",
                          "typeString": "struct CrowdStructure.MemberData memory"
                        }
                      },
                      "id": 94,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "email",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 556,
                      "src": "1990:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 95,
                      "name": "_emailMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "2004:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1990:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1990:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 98,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "2026:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MemberData_$557_storage_$",
                          "typeString": "mapping(address => struct CrowdStructure.MemberData storage ref)"
                        }
                      },
                      "id": 101,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 99,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 984,
                          "src": "2034:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2034:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2026:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MemberData_$557_storage",
                        "typeString": "struct CrowdStructure.MemberData storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 102,
                      "name": "_member",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "2046:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MemberData_$557_memory_ptr",
                        "typeString": "struct CrowdStructure.MemberData memory"
                      }
                    },
                    "src": "2026:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MemberData_$557_storage",
                      "typeString": "struct CrowdStructure.MemberData storage ref"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "2026:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 105,
                        "name": "enrolledMembers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "2058:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 108,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 106,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 984,
                          "src": "2074:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2074:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2058:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2086:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2058:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "2058:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 112,
                      "name": "membersCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "2094:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2108:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2094:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "2094:15:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 117,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 984,
                          "src": "2130:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2130:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 116,
                      "name": "LogEnrolled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "2118:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2118:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "EmitStatement",
                  "src": "2113:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 121,
                      "name": "enrolledMembers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "2151:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 124,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 122,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "2167:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2167:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2151:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74,
                  "id": 125,
                  "nodeType": "Return",
                  "src": "2144:34:0"
                }
              ]
            },
            "documentation": "@notice This function called by frontend to pass the parameters and register new memebr\n@dev Storing  member data in enrolled and members\n@param _firstNameMember : First Name of the member\n@param _lastNameMember : Last name of the member\n@param _emailMember : email of the member \n@return a flag refered that the member enrolled succefflly.",
            "id": 127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "storeMember",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "name": "_firstNameMember",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1754:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1754:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "name": "_lastNameMember",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1785:29:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1785:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70,
                  "name": "_emailMember",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1816:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1816:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1753:90:0"
            },
            "returnParameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1859:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1859:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1858:6:0"
            },
            "scope": 173,
            "src": "1733:507:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 138,
              "nodeType": "Block",
              "src": "2483:42:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 132,
                          "name": "enrolledMembers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "2493:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 135,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 133,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 984,
                            "src": "2509:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2509:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2493:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 136,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2492:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 131,
                  "id": 137,
                  "nodeType": "Return",
                  "src": "2485:36:0"
                }
              ]
            },
            "documentation": "@notice This function called by  user interface to get info of specific member\n@dev Retrieving  member data in enrolled and members lookups.\n@return Data of msg.sender .",
            "id": 139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enrolled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2450:2:0"
            },
            "returnParameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "2476:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2476:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2475:6:0"
            },
            "scope": 173,
            "src": "2432:93:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 152,
              "nodeType": "Block",
              "src": "2812:39:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 146,
                          "name": "members",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "2826:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MemberData_$557_storage_$",
                            "typeString": "mapping(address => struct CrowdStructure.MemberData storage ref)"
                          }
                        },
                        "id": 149,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 147,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 984,
                            "src": "2834:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2834:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2826:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MemberData_$557_storage",
                          "typeString": "struct CrowdStructure.MemberData storage ref"
                        }
                      }
                    ],
                    "id": 150,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2825:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MemberData_$557_storage",
                      "typeString": "struct CrowdStructure.MemberData storage ref"
                    }
                  },
                  "functionReturnParameters": 145,
                  "id": 151,
                  "nodeType": "Return",
                  "src": "2818:28:0"
                }
              ]
            },
            "documentation": "@notice This function called by  user interface to get info of specific member\n@dev Retrieving  member data from enrolled and members lookups.\n@return Data of msg.sender .",
            "id": 153,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 142,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 141,
                  "name": "isEnrolled",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 48,
                  "src": "2755:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2755:10:0"
              }
            ],
            "name": "getMember",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2739:2:0"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "2776:32:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MemberData_$557_memory_ptr",
                    "typeString": "struct CrowdStructure.MemberData"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 143,
                    "name": "CrowdStructure.MemberData",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 557,
                    "src": "2776:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MemberData_$557_storage_ptr",
                      "typeString": "struct CrowdStructure.MemberData"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2775:35:0"
            },
            "scope": 173,
            "src": "2720:131:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 164,
              "nodeType": "Block",
              "src": "3074:54:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 158,
                      "name": "tempCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "3080:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 159,
                      "name": "membersCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "3090:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3080:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "3080:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 162,
                    "name": "tempCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 156,
                    "src": "3115:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 157,
                  "id": 163,
                  "nodeType": "Return",
                  "src": "3108:16:0"
                }
              ]
            },
            "documentation": "@notice This function called by  user interface to get info of specific member\n@return tempCount The counted members of the contracts .",
            "id": 165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMemeberCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3033:2:0"
            },
            "returnParameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 156,
                  "name": "tempCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "3057:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3057:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3056:16:0"
            },
            "scope": 173,
            "src": "3009:119:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 171,
              "nodeType": "Block",
              "src": "3459:25:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 168,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        989,
                        990
                      ],
                      "referencedDeclaration": 989,
                      "src": "3469:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3469:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "3469:8:0"
                }
              ]
            },
            "documentation": null,
            "id": 172,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3439:2:0"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3459:0:0"
            },
            "scope": 173,
            "src": "3430:54:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 174,
        "src": "377:3110:0"
      }
    ],
    "src": "0:3488:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x5758F6Ac60DaC3D9CF7449db6e026fb47E32d830",
      "transactionHash": "0xd1f9fcf08153eafd6f732eb42ac5bdc8a0e5384ead6676fb9ad4d9427ee4c0b3"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2020-02-02T11:47:04.424Z",
  "devdoc": {
    "methods": {
      "enrolled()": {
        "details": "Retrieving  member data in enrolled and members lookups.",
        "return": "Data of msg.sender ."
      },
      "getMember()": {
        "details": "Retrieving  member data from enrolled and members lookups.",
        "return": "Data of msg.sender ."
      },
      "getMemeberCount()": {
        "return": "tempCount The counted members of the contracts ."
      },
      "storeMember(string,string,string)": {
        "details": "Storing  member data in enrolled and members",
        "params": {
          "_emailMember": ": email of the member ",
          "_firstNameMember": ": First Name of the member",
          "_lastNameMember": ": Last name of the member"
        },
        "return": "a flag refered that the member enrolled succefflly."
      }
    },
    "title": "Crowd Member  "
  },
  "userdoc": {
    "methods": {
      "enrolled()": {
        "notice": "This function called by  user interface to get info of specific member"
      },
      "getMember()": {
        "notice": "This function called by  user interface to get info of specific member"
      },
      "getMemeberCount()": {
        "notice": "This function called by  user interface to get info of specific member"
      },
      "storeMember(string,string,string)": {
        "notice": "This function called by frontend to pass the parameters and register new memebr"
      }
    }
  }
}